; ModuleID = 'ASP'
source_filename = "ASP"

@z = global i32 0
@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt.1 = private unnamed_addr constant [4 x i8] c"%f\0A\00"
@fmt.2 = private unnamed_addr constant [4 x i8] c"%s\0A\00"
@fmt.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt.4 = private unnamed_addr constant [4 x i8] c"%f\0A\00"
@fmt.5 = private unnamed_addr constant [4 x i8] c"%s\0A\00"
@fmt.6 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt.7 = private unnamed_addr constant [4 x i8] c"%f\0A\00"
@fmt.8 = private unnamed_addr constant [4 x i8] c"%s\0A\00"
@str = private unnamed_addr constant [10 x i8] c"\22b was 5\22\00"
@str.9 = private unnamed_addr constant [10 x i8] c"\22b was 7\22\00"
@str.10 = private unnamed_addr constant [9 x i8] c"\22b is 8\22\00"
@str.11 = private unnamed_addr constant [9 x i8] c"\22b is 8\22\00"
@str.12 = private unnamed_addr constant [17 x i8] c"\22b is something\22\00"
@str.13 = private unnamed_addr constant [18 x i8] c"\22b is equal to z\22\00"
@str.14 = private unnamed_addr constant [23 x i8] c"\22b used to equal to z\22\00"

declare i32 @printf(i8*, ...)

define i32 @eight() {
entry:
  ret i32 8
}

define i32 @zup() {
entry:
  %z = load i32, i32* @z
  %tmp = add i32 %z, 1
  store i32 %tmp, i32* @z
  %z1 = load i32, i32* @z
  ret i32 %z1
}

define i32 @main() {
entry:
  %b = alloca i32
  store i32 5, i32* %b
  %b1 = load i32, i32* %b
  %tmp = icmp eq i32 %b1, 5
  br i1 %tmp, label %then, label %else

merge:                                            ; preds = %else, %then
  %b4 = load i32, i32* %b
  %tmp5 = icmp eq i32 %b4, 7
  br i1 %tmp5, label %then7, label %else11

then:                                             ; preds = %entry
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.8, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str, i32 0, i32 0))
  %b2 = load i32, i32* %b
  %tmp3 = add i32 %b2, 3
  store i32 %tmp3, i32* %b
  br label %merge

else:                                             ; preds = %entry
  br label %merge

merge6:                                           ; preds = %else11, %then7
  %b12 = load i32, i32* %b
  %eight_result = call i32 @eight()
  %tmp13 = icmp eq i32 %b12, %eight_result
  br i1 %tmp13, label %then15, label %else17

then7:                                            ; preds = %merge
  %printf8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.8, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.9, i32 0, i32 0))
  %b9 = load i32, i32* %b
  %tmp10 = add i32 %b9, 1
  store i32 %tmp10, i32* %b
  br label %merge6

else11:                                           ; preds = %merge
  br label %merge6

merge14:                                          ; preds = %else17, %then15
  %b18 = load i32, i32* %b
  %eight_result19 = call i32 @eight()
  %tmp20 = add i32 %eight_result19, 1
  %tmp21 = icmp eq i32 %b18, %tmp20
  br i1 %tmp21, label %then23, label %else25

then15:                                           ; preds = %merge6
  %printf16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.8, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.10, i32 0, i32 0))
  br label %merge14

else17:                                           ; preds = %merge6
  br label %merge14

merge22:                                          ; preds = %else25, %then23
  store i32 8, i32* %b
  store i32 8, i32* @z
  %b27 = load i32, i32* %b
  %zup_result = call i32 @zup()
  %tmp28 = icmp eq i32 %b27, %zup_result
  br i1 %tmp28, label %then30, label %else32

then23:                                           ; preds = %merge14
  %printf24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.8, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.11, i32 0, i32 0))
  br label %merge22

else25:                                           ; preds = %merge14
  %printf26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.8, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.12, i32 0, i32 0))
  br label %merge22

merge29:                                          ; preds = %else32, %then30
  ret i32 0

then30:                                           ; preds = %merge22
  %printf31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.8, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str.13, i32 0, i32 0))
  br label %merge29

else32:                                           ; preds = %merge22
  %printf33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.8, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str.14, i32 0, i32 0))
  br label %merge29
}
