; ModuleID = 'NanoC'
source_filename = "NanoC"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.3 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1


@a = global i32 0
@b = global i32 0

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  store i32 18, i32* @a
  store i32 9, i32* @b
  br label %while

while:                                            ; preds = %merge, %entry
  %a7 = load i32, i32* @a
  %b8 = load i32, i32* @b
  %tmp9 = icmp ne i32 %a7, %b8
  br i1 %tmp9, label %while_body, label %merge10

while_body:                                       ; preds = %while
  %b = load i32, i32* @b
  %a = load i32, i32* @a
  %tmp = icmp slt i32 %b, %a
  br i1 %tmp, label %then, label %else

merge:                                            ; preds = %else, %then
  br label %while

then:                                             ; preds = %while_body
  %a1 = load i32, i32* @a
  %b2 = load i32, i32* @b
  %tmp3 = sub i32 %a1, %b2
  store i32 %tmp3, i32* @a
  br label %merge

else:                                             ; preds = %while_body
  %b4 = load i32, i32* @b
  %a5 = load i32, i32* @a
  %tmp6 = sub i32 %b4, %a5
  store i32 %tmp6, i32* @b
  br label %merge

merge10:                                          ; preds = %while
  %a11 = load i32, i32* @a
  store i32 %a11, i32* @a
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %a11)
  ret i32 0
}
