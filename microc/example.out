; ModuleID = 'MicroC'
source_filename = "MicroC"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt.1 = private unnamed_addr constant [4 x i8] c"%f\0A\00"
@fmt.2 = private unnamed_addr constant [4 x i8] c"%s\0A\00"
@str = private unnamed_addr constant [6 x i8] c"\22foo\22\00"

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %a = alloca i32*
  %s = alloca i8*
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %init1 = bitcast i8* %malloccall to i32**
  %init2 = bitcast i32** %init1 to i32*
  %init4 = getelementptr i32, i32* %init2, i32 0
  store i32 1, i32* %init4
  store i32* %init2, i32** %a
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i32 0, i32 0), i8** %s
  %a1 = load i32*, i32** %a
  %access2 = getelementptr i32, i32* %a1, i32 0
  %access3 = load i32, i32* %access2
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %access3)
  %s2 = load i8*, i8** %s
  %printf3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), i8* %s2)
  ret i32 0
}

declare noalias i8* @malloc(i32)
