; ModuleID = 'MicroC'
source_filename = "MicroC"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt.2 = private unnamed_addr constant [4 x i8] c"%f\0A\00"
@fmt.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt.4 = private unnamed_addr constant [4 x i8] c"%f\0A\00"
@fmt.5 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt.6 = private unnamed_addr constant [4 x i8] c"%f\0A\00"

declare i32 @printf(i8*, ...)

define i32 @a() {
entry:
  ret i32 1
}

define i32 @a.1(i32 %b) {
entry:
  %b1 = alloca i32
  store i32 %b, i32* %b1
  %b2 = load i32, i32* %b1
  %tmp = add i32 %b2, 1
  ret i32 %tmp
}

define i32 @main() {
entry:
  %a = alloca i32*
  %b = alloca double
  store double 5.000000e-01, double* %b
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %init1 = bitcast i8* %malloccall to i32**
  %init2 = bitcast i32** %init1 to i32*
  %init4 = getelementptr i32, i32* %init2, i32 0
  store i32 2, i32* %init4
  store i32* %init2, i32** %a
  %a1 = load i32*, i32** %a
  %access2 = getelementptr i32, i32* %a1, i32 0
  %access3 = load i32, i32* %access2
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.5, i32 0, i32 0), i32 %access3)
  %a_result = call i32 @a.1(i32 3)
  %a2 = load i32*, i32** %a
  %access23 = getelementptr i32, i32* %a2, i32 0
  store i32 %a_result, i32* %access23
  %a4 = load i32*, i32** %a
  %access25 = getelementptr i32, i32* %a4, i32 0
  %access36 = load i32, i32* %access25
  %printf7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.5, i32 0, i32 0), i32 %access36)
  %a_result8 = call i32 @a()
  %printf9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.5, i32 0, i32 0), i32 %a_result8)
  %b10 = load double, double* %b
  %printf11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.6, i32 0, i32 0), double %b10)
  %printf12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.6, i32 0, i32 0), double 5.000000e-01)
  ret i32 0
}

declare noalias i8* @malloc(i32)
